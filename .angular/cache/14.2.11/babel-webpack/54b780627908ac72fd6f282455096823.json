{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { CanvasElement } from 'angular-canvas';\nimport { getColor, getMatrix } from './utils';\nconst CAT_SPRITES = [`\n000000bb000b00\n000000bgbbbg00\n00b00bbbbbbb0b\n0b0000bbybbyb0\n0b000bbbbbbb0b\n0b00000wwww000\n00b000bbwww000\n000bbbbbbwb000\n000bbbbwbbbw00\n000bb0000bb000\n0000b00000b000\n`, `\n000000bb000b00\n000000bgbbbg00\n0b000bbbbbbb0b\n0b0000bbybbyb0\n0b000bbbbbbb0b\n0b00000wwww000\n00b000bbwww000\n000bbbbbbwb000\n000bbbbwbbbw00\n000bb0000bb000\n000b00000b0000\n`, `\n000000bb000b00\n000000bgbbbg00\n00000bbbbbbb0b\nb00000bbybbyb0\n0b000bbbbbbb0b\n0b00000wwww000\n00b000bbwww000\n000bbbbbbwb000\n000bbbbwbbbw00\n000bb0000bb000\n0000b00000b000\n`, `\n000000bb000b00\n000000bgbbbg00\n00000bbbbbbb0b\n000000bbybbyb0\nbb000bbbbbbb0b\n0b00000wwww000\n00b000bbwww000\n000bbbbbbwb000\n000bbbbwbbbw00\n000bb0000bb000\n000b00000b0000\n`];\nconst SIZE = 6;\nconst CAT_SPRITE_MATRIX = CAT_SPRITES.map(getMatrix);\nconst COLOR_MAP = new Map([['0', 'transparent'], ['b', '#161326'], ['w', 'white'], ['y', '#ffd800'], ['g', '#4c4c4c']]);\nlet NgCat = class NgCat {\n  constructor() {\n    this.spriteIndex = 0;\n    this.revert = false;\n    this.rightPressed = false;\n    this.leftPressed = false;\n    this.downPressed = false;\n    this.speed = 4;\n    this.size = SIZE;\n  }\n\n  addEventListener(eventName, callbackFunc) {\n    this.callbackFunc = callbackFunc;\n  }\n\n  removeEventListener(eventName, callbackFunc) {}\n\n  setNgProperty(name, value) {\n    this[name] = value;\n    this.parent.drawAll();\n  }\n\n  draw(context, time) {\n    let dx = 0;\n    const size = this.size;\n\n    if (this.rightPressed && this.parent.element.width > this.x + SIZE * 14) {\n      dx = this.downPressed ? 1 : this.speed;\n    }\n\n    if (this.leftPressed && 0 < this.x) {\n      dx = this.downPressed ? -1 : -this.speed;\n    }\n\n    this.x += dx;\n    let y = this.y;\n\n    if (this.callbackFunc) {\n      this.callbackFunc(this.x);\n    }\n\n    const matrix = CAT_SPRITE_MATRIX[this.spriteIndex];\n    let matrixLength = matrix.length; // Cat is seat\n\n    y += 2 * size;\n    matrixLength -= 2;\n\n    if (!this.downPressed && (this.rightPressed || this.leftPressed)) {\n      y -= 2 * size;\n      matrixLength += 2;\n    }\n\n    for (let ci = 0; ci < matrixLength; ci++) {\n      let rows = matrix[ci];\n\n      if (this.revert) {\n        rows = rows.slice().reverse();\n      }\n\n      for (let cy = 0; cy < rows.length; cy++) {\n        context.fillStyle = getColor(COLOR_MAP, rows[cy]);\n        context.fillRect(this.x + cy * size, y + ci * size, size, size);\n      }\n    }\n\n    this.needDraw = this.rightPressed || this.leftPressed;\n  }\n\n};\nNgCat = __decorate([CanvasElement({\n  selector: 'cat'\n})], NgCat);\nexport { NgCat };","map":null,"metadata":{},"sourceType":"module"}