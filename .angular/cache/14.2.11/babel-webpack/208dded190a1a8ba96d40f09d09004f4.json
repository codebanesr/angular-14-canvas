{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { CanvasElement } from 'angular-canvas';\nimport { getMatrix, renderMatrix } from './utils';\nconst SIZE = 3;\nconst CAT_SIZE = 7 * 6;\nconst LOGO = `\n0000000rrrr\n0000rrrrrdrrrr\n00rrrrrrwwdddrrr\nrrrrrrrwwwwddddrrr\nrrrrrrrwwwwdddddrr\nrrrrrrwwrdwwddddrr\nrrrrrrwwrdwwddddrr\nrrrrrrwwrdwwddddrr\nrrrrrwwrrddwwdddrr\nrrrrrwwrrddwwddrrr\n0rrrrwwwwwwwwddrr\n0rrrwwwwwwwwwwdrr\n0rrrwwrrrdddwwdrr\n0rrwwrrrrddddwwrr\n0rrwwrrrrddddwwrr\n0rrrrrrrrddddrrr\n000rrrrrrddrrrr\n00000rrrrdrrr\n000000rrrrrr\n0000000rrrr\n`;\nconst LOGO_MATRIX = getMatrix(LOGO);\nconst COLOR_MAP = new Map([['0', 'transparent'], ['r', '#e15856'], ['d', '#ca413a'], ['w', '#ffffff']]);\nlet NgLogo = class NgLogo {\n  constructor() {\n    this.deltaY = 0;\n    this.step = 1;\n    this.callbackFunc = {};\n  }\n\n  addEventListener(eventName, callbackFunc) {\n    this.callbackFunc[eventName] = callbackFunc;\n  }\n\n  removeEventListener(eventName, callbackFunc) {}\n\n  setNgProperty(name, value) {\n    this[name] = value;\n\n    if (this.x && this.step && this.unitX) {\n      this.parent.drawAll();\n    }\n  }\n\n  setAttribute(name, value) {\n    this[name] = value;\n  }\n\n  draw(context, time) {\n    this.deltaY += this.step;\n    renderMatrix(context, LOGO_MATRIX, COLOR_MAP, SIZE, this.x, this.deltaY);\n    this.needDraw = this.deltaY < this.parent.height;\n\n    if (!this.needDraw && this.callbackFunc.failed) {\n      this.deltaY = -200;\n      this.callbackFunc.failed();\n    } else if (this.callbackFunc.success) {\n      if (this.x - CAT_SIZE < this.unitX && this.unitX < this.x + CAT_SIZE) {\n        if (this.deltaY - CAT_SIZE < this.unitY && this.unitY < this.deltaY + CAT_SIZE) {\n          this.deltaY = -200;\n          this.x = Math.ceil(Math.random() * this.parent.width) - CAT_SIZE;\n          this.step += 0.5;\n          this.callbackFunc.success();\n        }\n      }\n    }\n  }\n\n};\nNgLogo = __decorate([CanvasElement({\n  selector: 'angular-logo'\n})], NgLogo);\nexport { NgLogo };","map":null,"metadata":{},"sourceType":"module"}